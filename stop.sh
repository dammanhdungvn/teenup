#!/bin/bash

# ========================================
# TeenUp Contest Management System
# Docker Stop Script for Linux/macOS
# ========================================

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}ÔøΩ [INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}‚úÖ [SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  [WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}‚ùå [ERROR]${NC} $1"
}

echo -e "${PURPLE}========================================${NC}"
echo -e "${PURPLE}  ÔøΩüõë TeenUp Contest Management System${NC}"
echo -e "${PURPLE}  ‚èπÔ∏è  Linux/macOS Edition${NC}"
echo -e "${PURPLE}  üêß D·ª´ng t·∫•t c·∫£ services${NC}"
echo -e "${PURPLE}========================================${NC}"
echo

# Check if Docker is running
print_status "Ki·ªÉm tra Docker..."
if ! docker info &> /dev/null; then
    print_warning "Docker daemon kh√¥ng ch·∫°y ho·∫∑c kh√¥ng c√≥ quy·ªÅn truy c·∫≠p"
    print_status "Services c√≥ th·ªÉ ƒë√£ ƒë∆∞·ª£c d·ª´ng"
else
    print_success "Docker daemon ƒëang ch·∫°y"
fi

# Stop all services
print_status "D·ª´ng t·∫•t c·∫£ services..."
if docker compose down; then
    print_success "ƒê√£ d·ª´ng containers"
else
    print_warning "C√≥ l·ªói khi d·ª´ng containers, nh∆∞ng ti·∫øp t·ª•c d·ªçn d·∫πp..."
fi

echo
print_status "D·ªçn d·∫πp containers v√† networks..."
if docker compose down --remove-orphans; then
    print_success "ƒê√£ d·ªçn d·∫πp containers v√† networks"
else
    print_warning "C√≥ l·ªói khi d·ªçn d·∫πp, ki·ªÉm tra th·ªß c√¥ng n·∫øu c·∫ßn..."
fi

# Option for deep cleanup
echo
echo -e "${YELLOW}ü§î B·∫°n c√≥ mu·ªën d·ªçn d·∫πp volumes v√† images kh√¥ng? (y/N)${NC}"
read -r CLEAN_ALL

if [[ "$CLEAN_ALL" =~ ^[Yy]$ ]]; then
    print_status "D·ªçn d·∫πp volumes..."
    docker compose down -v
    print_status "D·ªçn d·∫πp images kh√¥ng s·ª≠ d·ª•ng..."
    docker image prune -f
    print_success "ƒê√£ d·ªçn d·∫πp ho√†n to√†n"
else
    print_status "B·ªè qua d·ªçn d·∫πp volumes v√† images"
fi

echo
print_status "Ki·ªÉm tra tr·∫°ng th√°i..."
docker compose ps

echo
echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}  ‚úÖ ƒê√£ d·ª´ng t·∫•t c·∫£ services!${NC}"
echo -e "${GREEN}========================================${NC}"
echo
echo -e "${BLUE}ÔøΩ ƒê·ªÉ kh·ªüi ƒë·ªông l·∫°i:${NC}"
echo "  - Linux/macOS: ./start.sh"
echo "  - Windows Native: start.bat"
echo "  - Windows + WSL2: start-wsl2.bat"
echo
echo -e "${BLUE}ÔøΩ L·ªánh h·ªØu √≠ch:${NC}"
echo "  - Ki·ªÉm tra containers: docker compose ps"
echo "  - Xem logs c≈©: docker compose logs"
echo "  - D·ªçn d·∫πp th√™m: docker system prune"
echo "  - Kh·ªüi ƒë·ªông Docker: sudo systemctl start docker"
echo
